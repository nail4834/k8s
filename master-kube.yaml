apiVersion: v1
kind: Namespace
metadata:
  name: grafana-loki

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cadvisor
  namespace: grafana-loki
spec:
  selector:
    matchLabels:
      app: cadvisor
  template:
    metadata:
      labels:
        app: cadvisor
    spec:
      containers:
      - name: cadvisor
        image: gcr.io/cadvisor/cadvisor
        volumeMounts:
        - name: rootfs
          mountPath: /rootfs
          readOnly: true
        - name: varrun
          mountPath: /var/run
        - name: sys
          mountPath: /sys
          readOnly: true
        - name: varlibdocker
          mountPath: /var/lib/docker
      volumes:
      - name: rootfs
        hostPath:
          path: /
      - name: varrun
        hostPath:
          path: /var/run
      - name: sys
        hostPath:
          path: /sys
      - name: varlibdocker
        hostPath:
          path: /var/lib/docker

---
apiVersion: v1
kind: Service
metadata:
  name: cadvisor
  namespace: grafana-loki
spec:
  selector:
    app: cadvisor
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: prom/alertmanager
        ports:
        - containerPort: 9093

---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
spec:
  selector:
    app: alertmanager
  ports:
    - protocol: TCP
      port: 9093
      targetPort: 9093

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: grafana-loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.37.7
        # volumeMounts:
        # - name: prometheus-data
        #   mountPath: /prometheus

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: grafana-loki
spec:
  selector:
    app: prometheus
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: grafana-loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: loki
        image: grafana/loki:2.9.4
        ports:
        - containerPort: 3100

---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: grafana-loki
spec:
  selector:
    app: loki
  ports:
  - protocol: TCP
    port: 3100
    targetPort: 3100


---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail
  namespace: grafana-loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      containers:
      - name: promtail
        image: grafana/promtail:2.9.4
        ports:
        - containerPort: 3500
        volumeMounts:
        - name: varlog
          mountPath: /var/log
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
          

---
apiVersion: v1
kind: Service
metadata:
  name: promtail
  namespace: grafana-loki
spec:
  selector:
    app: promtail
  ports:
  - protocol: TCP
    port: 3500
    targetPort: 3500


---

apiVersion: v1
kind: Service
metadata:
  name: pg-data-wh
  namespace: grafana-loki
spec:
  selector:
    app: pg-data-wh
  ports:
  - protocol: TCP
    port: 5488
    targetPort: 5432
 
---
 
apiVersion: v1
kind: Service
metadata:
  name: pg-grafana
  namespace: grafana-loki
spec:
  selector:
    app: pg-grafana
  ports:
  - protocol: TCP
    port: 5499
    targetPort: 5432
 
---
 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: grafana-loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana-enterprise
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-storage
        emptyDir: {}
 

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: grafana-loki
spec:
  selector:
    app: grafana
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000


---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: s3-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain

  s3:
    bucket: p-grafana-loki-bucket
    access_key: YAKIA3ZEH6FXYXHZ7EADL
    secret_key: MwtHaycNXF1ZdbHr62zAexPrHqMCuORdxxWFUWf4
    prefix: grafana-loki  # Optional prefix for the bucket
    existingBucket: true  # Set to true if the bucket already exists
    
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---


apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pg-grafana
  namespace: grafana-loki
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1G

 
---
 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pg-data-wh
  namespace: grafana-loki
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1G

---
 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: grafana-loki
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1G




